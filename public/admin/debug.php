<?php
// public/admin/debug.php - Script de debug temporaire
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h2>üîç Debug Classe Transport</h2>";

// V√©rifier l'inclusion de config
echo "<h3>1. Test config.php</h3>";
try {
    require __DIR__ . '/../../config.php';
    echo "‚úÖ config.php charg√© avec succ√®s<br>";
    echo "Base de donn√©es connect√©e : " . ($db ? "‚úÖ Oui" : "‚ùå Non") . "<br>";
} catch (Exception $e) {
    echo "‚ùå Erreur config.php : " . $e->getMessage() . "<br>";
}

// V√©rifier si Transport existe d√©j√†
echo "<h3>2. Test classe Transport</h3>";
if (class_exists('Transport')) {
    echo "‚ö†Ô∏è La classe Transport existe d√©j√† !<br>";
    
    // Essayer de trouver o√π elle a √©t√© d√©clar√©e
    $reflection = new ReflectionClass('Transport');
    echo "D√©clar√©e dans : " . $reflection->getFileName() . "<br>";
    echo "Ligne : " . $reflection->getStartLine() . "<br>";
} else {
    echo "‚úÖ La classe Transport n'existe pas encore<br>";
}

// Lister tous les fichiers inclus
echo "<h3>3. Fichiers inclus</h3>";
$included = get_included_files();
foreach ($included as $file) {
    if (strpos($file, 'Transport.php') !== false) {
        echo "üîç Transport trouv√© dans : " . $file . "<br>";
    }
}

// Essayer d'inclure Transport
echo "<h3>4. Test inclusion Transport.php</h3>";
try {
    if (!class_exists('Transport')) {
        require_once __DIR__ . '/../../lib/Transport.php';
        echo "‚úÖ Transport.php inclus avec succ√®s<br>";
    } else {
        echo "‚ö†Ô∏è Transport d√©j√† inclus, pas de nouvelle inclusion<br>";
    }
} catch (Exception $e) {
    echo "‚ùå Erreur inclusion Transport.php : " . $e->getMessage() . "<br>";
}

// Test de cr√©ation d'instance
echo "<h3>5. Test cr√©ation instance</h3>";
try {
    if (class_exists('Transport') && isset($db)) {
        $transport = new Transport($db);
        echo "‚úÖ Instance Transport cr√©√©e avec succ√®s<br>";
        
        // Test d'une m√©thode
        $carriers = $transport->getCarriers();
        echo "Transporteurs disponibles : " . implode(', ', $carriers) . "<br>";
    } else {
        echo "‚ùå Impossible de cr√©er l'instance<br>";
    }
} catch (Exception $e) {
    echo "‚ùå Erreur cr√©ation instance : " . $e->getMessage() . "<br>";
}

// Informations syst√®me
echo "<h3>6. Informations syst√®me</h3>";
echo "PHP Version : " . PHP_VERSION . "<br>";
echo "M√©moire utilis√©e : " . memory_get_usage(true) / 1024 / 1024 . " MB<br>";
echo "Limite m√©moire : " . ini_get('memory_limit') . "<br>";

// Test des tables de base de donn√©es
echo "<h3>7. Test tables BDD</h3>";
if (isset($db)) {
    $tables = ['gul_heppner_rates', 'gul_xpo_rates', 'gul_kn_rates', 'gul_taxes_transporteurs', 'gul_options_supplementaires'];
    
    foreach ($tables as $table) {
        try {
            $stmt = $db->query("SELECT COUNT(*) as count FROM $table");
            $count = $stmt->fetch()['count'];
            echo "‚úÖ Table $table : $count lignes<br>";
        } catch (Exception $e) {
            echo "‚ùå Table $table : " . $e->getMessage() . "<br>";
        }
    }
}

echo "<hr><p><strong>‚ö†Ô∏è Supprimez ce fichier apr√®s debug !</strong></p>";
?>
