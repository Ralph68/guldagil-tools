# .github/workflows/deploy.yml
name: D√©ploiement FTP via git-ftp (staging & prod)

on:
  push:
    branches:
      - dev
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Variables communes
      DB_HOST:           ${{ secrets.DB_HOST }}
      DB_NAME:           ${{ secrets.DB_NAME }}
      DB_USER:           ${{ secrets.DB_USER }}
      DB_PASS:           ${{ secrets.DB_PASS }}
      MAIL_HOST:         ${{ secrets.MAIL_HOST }}
      MAIL_PORT:         ${{ secrets.MAIL_PORT }}
      MAIL_USERNAME:     ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD:     ${{ secrets.MAIL_PASSWORD }}
      MAIL_TO:           ${{ secrets.MAIL_TO }}
      # Staging
      FTP_SERVER_DEV:    ${{ secrets.FTP_SERVER_DEV }}
      FTP_USERNAME_DEV:  ${{ secrets.FTP_USERNAME_DEV }}
      FTP_PASSWORD_DEV:  ${{ secrets.FTP_PASSWORD_DEV }}
      SERVER_DIR_DEV:    ${{ secrets.SERVER_DIR_DEV }}
      # Production
      FTP_SERVER_PROD:   ${{ secrets.FTP_SERVER_PROD }}
      FTP_USERNAME_PROD: ${{ secrets.FTP_USERNAME_PROD }}
      FTP_PASSWORD_PROD: ${{ secrets.FTP_PASSWORD_PROD }}
      SERVER_DIR_PROD:   ${{ secrets.SERVER_DIR_PROD }}

    steps:
      # 1) Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # 2) Journal local
      - name: G√©n√©rer un journal de d√©ploiement local
        if: always()
        run: |
          echo "üîÅ D√©ploiement sur ${GITHUB_REF#refs/heads/} √† $(date) par ${{ github.actor }} (commit: ${{ github.sha }})" \
            > deploy-log.txt

      # 3) G√©n√©rer .env pour la BDD (reste en local)
      - name: G√©n√©rer .env pour la BDD
        run: |
          cat <<EOF > .env
          DB_HOST="${DB_HOST}"
          DB_NAME="${DB_NAME}"
          DB_USER="${DB_USER}"
          DB_PASS="${DB_PASS}"
          DB_CHARSET="utf8mb4"
          APP_ENV="production"
          EOF

      # 4) Installer git-ftp
      - name: Installer git-ftp
        run: sudo apt-get update && sudo apt-get install -y git-ftp

      # 5) Pr√©parer .git-ftp-ignore
      - name: G√©n√©rer .git-ftp-ignore
        run: |
          cat <<EOF > .git-ftp-ignore
          *
          !.git-ftp-ignore
          !lib/**
          !public/**
          !config.php
          public/assets/img/**
          EOF

      # 6) Committer .git-ftp-ignore (√©vite le ¬´ dirty repo ¬ª)
      - name: Committer .git-ftp-ignore
        run: |
          git config user.email "actions@github.com"
          git config user.name  "GitHub Actions"
          git add .git-ftp-ignore
          git commit -m "ci: ajout patterns git-ftp ignore" --no-verify || echo "Rien √† committer"

      # 7) D√©ployer via git-ftp (staging ou prod selon la branche)
      - name: D√©ployer via git-ftp
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}

          if [ "$BRANCH" = "main" ]; then
            URL="ftp://${FTP_SERVER_PROD}/${SERVER_DIR_PROD}"
            USER="${FTP_USERNAME_PROD}"
            PASS="${FTP_PASSWORD_PROD}"
          else
            URL="ftp://${FTP_SERVER_DEV}/${SERVER_DIR_DEV}"
            USER="${FTP_USERNAME_DEV}"
            PASS="${FTP_PASSWORD_DEV}"
          fi

          echo "‚Üí D√©ploiement sur $BRANCH : $URL"

          export GIT_FTP_URL="$URL"
          export GIT_FTP_USER="$USER"
          export GIT_FTP_PASSWORD="$PASS"

          git ftp push --auto-init --verbose

      # 8) Notification email (succ√®s)
      - name: Envoi d‚Äôun email (succ√®s)
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ env.MAIL_HOST }}
          server_port:    ${{ env.MAIL_PORT }}
          username:       ${{ env.MAIL_USERNAME }}
          password:       ${{ env.MAIL_PASSWORD }}
          subject:        "‚úÖ D√©ploiement ${GITHUB_REF#refs/heads/} r√©ussi"
          body: |
            Le d√©ploiement de ${{ github.repository }} sur la branche ${GITHUB_REF#refs/heads/} a r√©ussi.
            Voir l‚Äôaction : https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to:   ${{ env.MAIL_TO }}
          from: GitHub Deploy Bot <${{ env.MAIL_USERNAME }}>

      # 9) Notification email (√©chec)
      - name: Envoi d‚Äôun email (√©chec)
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ env.MAIL_HOST }}
          server_port:    ${{ env.MAIL_PORT }}
          username:       ${{ env.MAIL_USERNAME }}
          password:       ${{ env.MAIL_PASSWORD }}
          subject:        "‚ùå √âchec du d√©ploiement ${GITHUB_REF#refs/heads/}"
          body: |
            Le d√©ploiement de ${{ github.repository }} sur la branche ${GITHUB_REF#refs/heads/} a √©chou√©.
            Voir l‚Äôaction : https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to:   ${{ env.MAIL_TO }}
          from: GitHub Deploy Bot <${{ env.MAIL_USERNAME }}>

